[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neural-operator-foundation-lab"
version = "0.1.0"
description = "A training & benchmarking suite for foundation neural operators that tackle high-dimensional PDEs"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@terragon.ai"},
]
keywords = ["neural-operators", "pde", "machine-learning", "physics", "deep-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "matplotlib>=3.6.0",
    "tqdm>=4.64.0",
    "einops>=0.6.0",
    "h5py>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
jax = [
    "jax>=0.4.0",
    "jaxlib>=0.4.0",
]
viz = [
    "plotly>=5.14.0",
    "dash>=2.10.0",
    "vtk>=9.2.0",
]

[project.urls]
Homepage = "https://github.com/terragon-labs/neural-operator-foundation-lab"
Documentation = "https://neural-operator-lab.readthedocs.io"
Repository = "https://github.com/terragon-labs/neural-operator-foundation-lab"
Issues = "https://github.com/terragon-labs/neural-operator-foundation-lab/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["neural_operator_lab"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=neural_operator_lab --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/neural_operator_lab"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]