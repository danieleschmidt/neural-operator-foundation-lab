{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Development Dependencies",
      "type": "shell",
      "command": "pip",
      "args": ["install", "-e", ".[dev,test,docs]"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "pytest",
      "args": ["tests/", "-v", "--cov=neural_operator_lab"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [
        "$python"
      ]
    },
    {
      "label": "Run Fast Tests",
      "type": "shell",
      "command": "pytest",
      "args": ["tests/", "-v", "-m", "not slow"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [
        "$python"
      ]
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "bash",
      "args": ["-c", "black src/ tests/ && isort src/ tests/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint Code",
      "type": "shell",
      "command": "ruff",
      "args": ["check", "src/", "tests/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [
        "$python"
      ]
    },
    {
      "label": "Type Check",
      "type": "shell",
      "command": "mypy",
      "args": ["src/neural_operator_lab/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [
        "$mypy"
      ]
    },
    {
      "label": "Build Documentation",
      "type": "shell",
      "command": "make",
      "args": ["docs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Clean Cache",
      "type": "shell",
      "command": "bash",
      "args": ["-c", "find . -type d -name '__pycache__' -exec rm -rf {} + 2>/dev/null || true; find . -name '*.pyc' -delete 2>/dev/null || true"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Start Jupyter Lab",
      "type": "shell",
      "command": "jupyter",
      "args": ["lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start TensorBoard",
      "type": "shell",
      "command": "tensorboard",
      "args": ["--logdir=logs", "--host=0.0.0.0", "--port=6006"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Security Scan",
      "type": "shell",
      "command": "bash",
      "args": ["-c", "bandit -r src/ && safety check"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Profile Code",
      "type": "shell",
      "command": "python",
      "args": ["-m", "cProfile", "-o", "profile.prof", "${file}"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ]
}