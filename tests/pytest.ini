[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=neural_operator_lab
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (test component interactions)
    end_to_end: End-to-end tests (test complete workflows)
    performance: Performance tests (benchmarking and profiling)
    slow: Slow running tests (may take minutes)
    gpu: Tests requiring GPU (skip if no GPU available)
    security: Security-related tests
    regression: Regression tests (prevent performance/functionality regressions)

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::torch.jit._warnings.UserWarning
    ignore::FutureWarning:torch.*

# Minimum version
minversion = 7.0

# Test collection
collect_ignore = [
    "setup.py",
    "docs/",
    "build/",
    "dist/",
]

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (for hanging tests)
timeout = 300
timeout_method = thread